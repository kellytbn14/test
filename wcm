# Configurar la contrase√±a larga
$PasswordLarga = "Aqu√≠VaTuContrase√±aSuperLarga..."  # Reemplazar con la contrase√±a real
$UserName = "MiUsuario"
$TargetBase = "IIS_PGP_KEYS_CREDENTIALS"
$MaxLength = 2000  # M√°ximo permitido por fragmento

# Dividir la contrase√±a en partes
$Parts = [System.Collections.ArrayList]::new()
for ($i = 0; $i -lt $PasswordLarga.Length; $i += $MaxLength) {
    $EndIndex = [Math]::Min($i + $MaxLength, $PasswordLarga.Length)
    $Parts.Add($PasswordLarga.Substring($i, $EndIndex - $i)) | Out-Null
}

# Guardar cada parte en Credential Manager
$Index = 1
foreach ($Part in $Parts) {
    $CredTarget = "$TargetBase`_Part$Index"
    $SecurePassword = ConvertTo-SecureString $Part -AsPlainText -Force
    $Credential = New-Object System.Management.Automation.PSCredential ($UserName, $SecurePassword)

    New-StoredCredential -Target $CredTarget -Credential $Credential -Type Generic -Persist LocalMachine
    Write-Host "Guardado: $CredTarget"
    
    $Index++
}

Write-Host "‚úÖ Contrase√±a dividida y almacenada en Credential Manager."

$TargetBase = "IIS_PGP_KEYS_CREDENTIALS"
$Index = 1
$PasswordRecuperada = ""

while ($true) {
    $CredTarget = "$TargetBase`_Part$Index"
    $StoredCred = Get-StoredCredential -Target $CredTarget

    if ($StoredCred -eq $null) {
        break  # No hay m√°s partes
    }

    $PasswordRecuperada += $StoredCred.Password
    $Index++
}

Write-Host "üîì Contrase√±a reconstruida: $PasswordRecuperada"






Install-Module -Name CredentialManager -Force -AllowClobber

$cred = New-Object PSCredential("MiUsuario", (ConvertTo-SecureString "MiContrase√±a" -AsPlainText -Force))
New-StoredCredential -Target "MiAplicacion" -Credential $cred -Type Generic -Persist LocalMachine

Get-StoredCredential -Target "MiAplicacion"



runas /user:"MiServidor\UsuarioAppPool" cmd
cmdkey /add:MiAplicacion /user:MiUsuario /pass:MiContrase√±a
cmdkey /list


using System;
using System.Net;
using AdysTech.CredentialManager;

public class CredentialHelper
{
    public static void SaveCredential(string target, string user, string password)
    {
        var credential = new NetworkCredential(user, password);
        var savedCredential = CredentialManager.SaveCredentials(target, credential);

        if (savedCredential != null)
        {
            Console.WriteLine($"‚úÖ Credencial guardada con √©xito para '{target}'.");
        }
        else
        {
            Console.WriteLine("‚ùå Error al guardar la credencial.");
        }
    }
}

// Ejemplo de uso
class Program
{
    static void Main()
    {
        CredentialHelper.SaveCredential("MiAplicacion", "usuario123", "miPasswordSegura");
    }
}
